0,025056
128
D

F

J
2 6 13 17 19 22 24 27 30 33 37 41 44 47 49 51 54 57 60 63 64 67 69 71 74 75 79 83 87 91 94 96 98 101 102 106 109 112 116 119 122 126 133 137 138 141 142 145 146 150 153 156 159 163 168 172 175 177 180 183 187 191 193 194 195 197 202 206 210 216 222 223 228 234 238 239 242 243 244 247 248 251 252 255 256 259 260 263 264 267 268 271 272 275 277 280 281 284 285 288 290 293 295 298 301 302 306 309 310 313 316 317 320 321 324 325 327 328 329 331 336 338 340 342 345 346 349 351 353 356 357 359 360 361 364 366 369 370 373 376 377 380 383 384 387 389 391 394 396 399 401 402 403 406 408 411 412 415 416 419 421 424 427 428 429 432 433 434 437 438 440 441 442 445 447 450 453 454 457 458 461 462 465 466 470 473 475 478 479 482 483 484 487
K
3 7 9 12 15 16 18 20 21 23 25 26 28 30 33 38 42 43 45 46 48 50 52 53 55 57 60 62 63 66 68 70 72 74 75 80 84 88 92 93 95 97 99 101 102 107 108 110 112 117 118 120 122 127 129 132 136 138 141 142 145 146 151 152 154 156 159 164 166 168 173 174 176 178 180 183 188 192 194 195 196 197 201 205 209 212 215 218 221 223 227 230 233 237 239 242 243 244 247 248 251 252 255 256 259 260 262 263 266 267 270 271 274 276 278 280 281 283 284 287 289 291 292 294 296 297 299 301 302 307 308 309 312 314 316 317 320 321 324 325 328 329 330 331 335 337 339 341 343 344 345 348 350 352 354 356 357 360 361 362 363 365 367 369 370 373 376 377 380 382 383 386 388 390 392 393 395 397 399 402 403 404 405 407 409 411 412 414 415 418 420 422 423 425 427 428 429 432 433 434 437 438 441 442 443 444 446 448 450 453 454 457 458 461 462 465 466 471 472 474 476 478 479 482 483 484 487




This is a `.yrct` file, which stories the file format of a chart. I chose it because apparently to read `.json` into Java is to suffer. Also, these files are simple, parsable, and easily generated with python (markov chain!!). This file is of the following form:

song delay: double
song bpm: int
repeat {
    Trace letter: String
    Trace note sequence: list[int]
}

Anything that is not `DFJK` (as those are the letters used in my traces) will not trigger the NoteManagers to read in a note sequence and thus can be considered a comment.

My computer's locale believes doubles use commas as seperators (e.g. `3,14` is an approximation of Math.PI) and thus if the script crashes maybe change it to a period on your end.